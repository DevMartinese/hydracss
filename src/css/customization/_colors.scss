$themes: (
  light: (
    'white': $white,
    'black': $black,
    'light': $light,
    'dark': $dark,
    'global': $global-color,
    'stroke': #edf2f7,
    'invert': invert(0),
  ),
  dark: (
    'white': $black,
    'light': $dark,
    'black': $white,
    'dark': $light,
    'global': $white,
    'stroke': #16161a,
    'invert': invert(1),
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} &{
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      
      @each $key, $value in $theme-map{
        .text-#{ $key }{
          color: $value;
        }

        .bg-#{ $key }{
          background: $value;
        }
      }

      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

body{
  @include themify($themes) {
    color: themed('black');
    background-color: themed('white');
  }
}

@each $key, $value in $colors{
  .text-#{ $key }{
    color: $value;
  }

  .bg-#{ $key }{
    background: $value;
  }
}

.fill-current{
  fill: currentColor !important;
}